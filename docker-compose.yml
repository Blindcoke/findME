services:
  findme-db:
    image: postgres:16.1-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 2s
      timeout: 2s
      retries: 20
    ports:
      - "5433:5432"
    entrypoint: |
      sh -c '
      mkdir -p /var/lib/postgresql/data
      chown -R postgres:postgres /var/lib/postgresql/data
      exec docker-entrypoint.sh postgres
      '
    restart: always
  findme-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./data/media:/data/media
      - ./backend/staticfiles:/app/staticfiles
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      findme-db:
        condition: service_healthy
    command: >
      bash -c "python manage.py migrate && 
               python manage.py collectstatic --noinput --clear && 
               uvicorn backend.asgi:application --host 0.0.0.0 --port 8000"
    restart: always
  findme-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    restart: always
  findme-scraper:
    build:
      context: ./scraping
      dockerfile: Dockerfile
    volumes:
      - ./scraping:/app
      - ./data/media:/data/media
      - ./scraping/sessions:/app/sessions
    env_file:
      - .env
    depends_on:
      findme-db:
        condition: service_healthy
    restart: always
  findme-nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./data/media:/data/media
      - ./backend/staticfiles:/app/staticfiles
    depends_on:
      - findme-frontend
      - findme-backend
    restart: always
